name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build ${{ matrix.firmware.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        firmware:
          - file: m5stack-atom-echo.yaml
            name: M5 Stack Atom Echo
            manifest_filename: m5stack-atom-echo-manifest.json
          - file:  m5stack-atom-speaker-kit.yaml
            name: M5 Stack Atom Speaker Kit
            manifest_filename: m5stack-atom-speaker-kit-manifest.json
          - file: raspiaudio-muse-proto.yaml
            name: Raspiaudio Muse Proto
            manifest_filename: raspiaudio-muse-proto-manifest.json
          - file: raspiaudio-muse-luxe.yaml
            name: Raspiaudio Muse Luxe
            manifest_filename: raspiaudio-muse-luxe-manifest.json
      fail-fast: false
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3.3.0
      - name: Build firmware
        uses: esphome/build-action@v1.8.0
        id: esphome-build
        with:
          yaml_file: ${{ matrix.firmware.file }}
          version: latest
      - name: Copy firmware and manifest
        run: |
          mkdir output
          mv ${{ steps.esphome-build.outputs.name }} output/
          jq -s '{"name": "${{ matrix.firmware.name }}", "version": "${{ steps.esphome-build.outputs.esphome-version }}", "home_assistant_domain": "esphome", "new_install_skip_erase": false, "builds":.}' output/${{ steps.esphome-build.outputs.name }}/manifest.json > output/${{ matrix.firmware.manifest_filename }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: ${{ matrix.firmware.name }}
          path: output


  consolidate:
    if: (github.event_name == 'workflow_dispatch' || github.event_name == 'push') && github.ref == 'refs/heads/main'
    name: Consolidate firmwares
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Download built firmwares
        uses: actions/download-artifact@v3
        with:
          path: firmwares
      - name: Copy files
        run: |-
          cp -R static/* output/
          cp -R firmwares/*/* output/
      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v1.0.7
        with:
          path: output

  deploy:
    if: (github.event_name == 'workflow_dispatch' || github.event_name == 'push') && github.ref == 'refs/heads/main'
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: consolidate
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1.2.3
